{"version":3,"sources":["AddFileModal.js","ListItem.js","App.js","index.js"],"names":["AddFileModal","Form","create","name","visible","onCancel","onCreate","form","React","useState","folders","setFolders","getFieldDecorator","useEffect","fetch","then","data","a","async","json","jsonData","title","okText","onOk","layout","Item","initialValue","Group","value","label","validateTrigger","rules","required","message","dataSource","onChange","setFieldsValue","folder","filterOption","inputValue","option","props","children","toUpperCase","indexOf","ListItem","item","selected","setSelected","style","cursor","background","includes","uri","onClick","filter","el","peers","type","height","downloadSpeed","percent","progress","downloaded","total","timeRemaining","socketIo","io","App","formRef","setFormRef","isShown","toggleShowModal","torrents","setTorrents","on","notification","success","duration","saveFormRef","useCallback","node","validateFields","err","values","emit","split","join","ref","border","extra","key","forEach","console","log","send","size","bordered","paddinhRight","renderItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3102eb80.chunk.js","sourcesContent":["import React from \"react\";\nimport { Modal, Form, Input, Radio, AutoComplete } from \"antd\";\n\nfunction AddFileModalComponent({ visible, onCancel, onCreate, form }) {\n  const [folders, setFolders] = React.useState([]);\n  const { getFieldDecorator } = form;\n\n  React.useEffect(() => {\n    fetch(\"/folders\").then(async data => {\n      const jsonData = await data.json();\n      setFolders(jsonData.data);\n    });\n  }, [visible]);\n\n  return (\n    <Modal\n      visible={visible}\n      title=\"Form within a Modal\"\n      okText=\"Submit\"\n      onCancel={onCancel}\n      onOk={onCreate}\n    >\n      <Form layout=\"vertical\">\n        <Form.Item>\n          {getFieldDecorator(\"type\", {\n            initialValue: \"tv-show\"\n          })(\n            <Radio.Group>\n              <Radio value=\"tv-show\">TV SHOW</Radio>\n              <Radio value=\"movies\">MOVIES</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"Folder name\">\n          {getFieldDecorator(\"folder\", {\n            initialValue: \"\",\n            validateTrigger: [\"onChange\"],\n            rules: [{ required: true, message: \"Please input folder name\" }]\n          })(\n            <AutoComplete\n              dataSource={folders}\n              onChange={value => form.setFieldsValue({ folder: value })}\n              filterOption={(inputValue, option) =>\n                option.props.children\n                  .toUpperCase()\n                  .indexOf(inputValue.toUpperCase()) !== -1\n              }\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"Torrent link\">\n          {getFieldDecorator(\"link\", {\n            initialValue: \"\",\n            rules: [{ required: true, message: \"Please input torrent link!\" }]\n          })(<Input />)}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n\nconst AddFileModal = Form.create({ name: \"modal_form\" })(AddFileModalComponent);\n\nexport default AddFileModal;\n","import React from 'react';\nimport { Icon, List, Progress } from 'antd';\n\nfunction ListItem(item, selected, setSelected) {\n  const toggleItem = () => {\n    if (!selected.includes(item.uri)) {\n      setSelected([...selected, item.uri])\n    } else {\n      setSelected(selected.filter((el) => el !== item.uri))\n    }\n  }\n\n  return (\n    <List.Item\n      style={{\n        cursor: 'pointer',\n        background: selected.includes(item.uri) ? '#72B6FF' : 'transparent',\n      }}\n      onClick={toggleItem}\n    >\n    <strong>{item.name}</strong> ({item.peers || 'n'} peers) - <Icon type=\"arrow-down\" height=\"6\" /> {item.downloadSpeed} Kb/s\n    <Progress percent={item.progress} />\n    <span>{item.downloaded}Mb of {item.total}Mb - </span>\n    <span>{item.timeRemaining} remaining</span>\n    </List.Item>\n  );\n}\n\nexport default ListItem;\n","import React from 'react';\nimport { Button, Icon, List, notification, PageHeader } from 'antd';\nimport io from 'socket.io-client';\n\nimport AddFileModal from './AddFileModal';\nimport ListItem from './ListItem';\n// import { KODI_IP } from '../config';\n\nconst socketIo = io(`${process.env.NODE_ENV === 'development' ? 'localhost' : 'http://192.168.0.105'}:9091`);\n\nfunction App() {\n  const [formRef, setFormRef] = React.useState(null);\n  const [isShown, toggleShowModal] = React.useState(false);\n  const [selected, setSelected] = React.useState([]);\n  const [torrents, setTorrents] = React.useState([]);\n\n  React.useEffect(() => {\n    socketIo.on('connect', () => {\n      socketIo.on('torrent', ({data}) => setTorrents(data));\n      socketIo.on('done', ({data}) => notification.success({message: `DOWNLOAD DONE ${data}`, duration: null}));\n    });\n  }, []);\n\n  const handleAddFile = () => {\n    formRef.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n\n      socketIo.emit('new', {data: {\n        ...values,\n        folder: values.folder.split(' ').join('.'),\n      }})\n      toggleShowModal(false);\n    })\n  }\n\n  const saveFormRef = React.useCallback(node => {\n    if (node !== null) {\n      setFormRef(node);\n    }\n  }, []);\n\n  return (\n    <>\n      <AddFileModal\n        onCancel={() => toggleShowModal(false)}\n        onCreate={handleAddFile}\n        visible={isShown}\n        ref={saveFormRef}\n      />\n     <PageHeader\n        style={{border: '1px solid rgb(235, 237, 240)',}}\n        title=\"Home Torrent Box\"\n        extra={[\n          <Button key=\"1\" onClick={() => toggleShowModal(true)}>\n            <Icon type=\"file-add\" />\n          </Button>,\n          <Button key=\"4\" onClick={() => selected.forEach((uri) => {\n            console.log(uri);\n            socketIo.send('delete', {uri})\n          })}>\n            <Icon type=\"delete\" />\n          </Button>,\n        ]}\n      />\n      <List\n        size=\"large\"\n        bordered\n        style={{paddinhRight: '10px'}}\n        dataSource={torrents.filter((item) => item.progress !== null)}\n        renderItem={(item) => ListItem(item, selected, setSelected)}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './global.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}